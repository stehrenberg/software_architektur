/**
 * Hochschule Muenchen, Fakultaet 07 fuer Mathematik und Informatik Praktikum
 * Software-Architektur, Sommersemester 2015 OS: Windows 7 Professional SP1 (64
 * Bit); Java-Version: 1.8.0_05 CPU: Intel Core2Duo T7300 @ 2.0 GHz, 4GB RAM
 * Aufgabe 3: Decorator Pattern
 */
package edu.hm.iny.patterns.decorators;

import edu.hm.cs.rs.arch.pattern.decorator.TextImage;

/**
 * A decorator that provides a frame around a given TextImage.
 * @version 2015-04-25
 */
public class Framed extends TextImageBaseDecorator {

	/** This is the size of the frame that adds to the height/width of an image. */
	private static final int FRAME = 2;
	/** Corners of the frame consist of this char. */
	private final char cornerFrameElement = '+';
	/** Vertical borders of the frame consist of this char. */
	private final char verticalFrameElement = '|';
	/** Horizontal borders of the frame consist of this char. */
	private final char horizontalFrameElement = '-';

	public Framed(final TextImage image) {
		super(image);
	}

	@Override public int getWidth() {
		return super.getWidth() + FRAME;
	};

	@Override public int getHeight() {
		return super.getHeight() + FRAME;
	};

	@Override public char charAt(final int column, final int row) {

		char returnChar;

		// TODO Conditions in gescheite Methoden auslagern!
		if(
				column == 0 && row == 0
				|| column == getWidth()-1 && row == getHeight()-1
				|| column == 0 && row == getHeight()-1
				|| column == getWidth()-1 && row == 0
				) {
			returnChar = cornerFrameElement;
		}
		else if(row == 0 || row == getHeight()-1) {
			returnChar = horizontalFrameElement;
		}
		else if(column == 0 || column == getWidth()-1) {
			returnChar = verticalFrameElement;
		}
		else {
			returnChar = super.charAt(column - FRAME, row - FRAME);
		}

		return returnChar;
	}
}
